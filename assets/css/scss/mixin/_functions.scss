@charset "UTF-8";


// 文字列の分割
@function str-split($string, $separator) {
    // empty array/list
    $split-arr: ();
    // first index of separator in string
    $index : str-index($string, $separator);
    // loop through string
    @while $index != null {
        // get the substring from the first character to the separator
        $item: str-slice($string, 1, $index - 1);
        // push item to array
        $split-arr: append($split-arr, $item);
        // remove item and separator from string
        $string: str-slice($string, $index + 1);
        // find new index of separator
        $index : str-index($string, $separator);
    }
    // add the remaining string to list (the last item)
    $split-arr: append($split-arr, $string);

    @return $split-arr;
}



@function number($string) {
	$result: 0;
	$decimal: 1;
	$minus: false;
	$float: false;

	$len: str-length($string);

	$map: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4);
	$map: map-merge($map, ('5': 5, '6': 6, '7': 7, '8': 8, '9': 9));

	@for $i from 1 through $len {
		$character: str-slice($string, $i, $i);
		$number: map-get($map, $character);

		@if $character == '-' {
		    $minus: true;
		} @else if $character == '.' {
		    $float: true;
		} @else {
		    $result: $result * 10 + $number;

		    @if $float {
		        $decimal: $decimal * 10;
		    }
		}
	}
	@if not $minus {
		$result: $result / $decimal;
	} @else {
		$result: -($result / $decimal);
	}

	@return $result;

}


@function halign_select($value) {
	@if $value == l or $value == left {
		@return left;
	} @else if $value == c or $value == center {
		@return center;
	} @else if $value == r or $value == right {
		@return right;
	} @else if $value == j or $value == justify {
		@return justify;
	}
}


















